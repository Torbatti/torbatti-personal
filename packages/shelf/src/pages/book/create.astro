---
import ShelfLayout from "../_ShelfLayout.astro";
---
<ShelfLayout title="کتابخانه" description="" author="" key_words="" child_url="book">
  <div id="create_section" class="tc2 vbox flex flex-col aitems-center jcontent-center high-gap">

    <form class="flex flex-col low-gap" name="createForm" onsubmit="event.preventDefault()">
    <!-- <form class="flex flex-col low-gap" name="createForm" onsubmit="event.preventDefault()"> -->

      <input type="text" id="" name="book-title" placeholder="Book Title">
      <input type="text" id="" name="book-author" placeholder="Book Author">
      <input type="text" id="" name="book-translator" placeholder="Book Translator">
      <input type="text" id="" name="book-genre" placeholder="Book Genre">

      <input type="number" id="" name="book-rate" placeholder="Book Rate">
      <input type="number" id="" name="book-chap" placeholder="Book Chapters">

      <input type="text" id="" name="book-reld" placeholder="Book Release Date">

      <select name="book-state" id="">
        <option value="خوانده خواهد شد">      خوانده خواهد شد      </option>
        <option value="درحال خوانده شدن">     درحال خوانده شدن   </option>
        <option value="خوانده شده است">       خوانده شده است      </option>
        <option value="رها شده">              رها شده      </option>
        <option value="سبد خرید">             سبد خرید  </option>
      </select>

      <button id="submitButton" type="submit" class="">ثبت</button>

    </form>


  </div>
</ShelfLayout>

<script>
  import PocketBase from 'pocketbase';
  const pb = new PocketBase("http://127.0.0.1:8090");

  const adminData = await pb.admins.authWithPassword('admin@example.com', 'admin@example.com');
  const records = await pb.collection('books').getFullList();
  console.log(records);

  let subB:any = document.querySelector("#submitButton");
  subB.addEventListener("click",()=>submitForm())

  async function submitForm() {    
    // Capture Form as X
    let x:any = document.forms["createForm"];

    const data = {
      "book_title":       x["book-title"].value,
      "book_author":      x["book-author"].value,
      "book_translator":  x["book-translator"].value,
      "book_genre":       x["book-genre"].value,
      "book_rate":        x["book-rate"].value,
      "book_chapters":    x["book-chap"].value,
      "release_date":     x["book-reld"].value,
      "book_state":       x["book-state"].value,
    }

    console.log(data);

    const record = await pb.collection('books').create(data);

  }

</script>

<style>
  /* REMOVES number type input arrows */
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
    /* Firefox */
    input[type=number] {
      -moz-appearance: textfield;
    }
  /*  */

  a{text-decoration:none;font-size:small;font-weight: bold;}
  a:hover{text-decoration:underline;}

  #create_section{
    height:90vh;
  }
  form input,form button,form select{
    border-radius:4px;
    padding:4px 1rem;
    text-align:left;
  }
  form button{
    text-align:center;
    background-color:var(--c3);
    color:var(--c1);
    cursor: pointer;
  }
</style>